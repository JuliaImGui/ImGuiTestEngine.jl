var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"note: Note\nWe try to document the basics here, but it is not meant as a replacement for the upstream documentation. If you need general help we recommend looking at the test engine wiki, and possibly at the documentation comments in these header files:imgui_te_engine.h (for the engine API)\nimgui_te_context.h (for the test context API)","category":"page"},{"location":"api/","page":"API","title":"API","text":"There are two major parts of the test engine:","category":"page"},{"location":"api/","page":"API","title":"API","text":"The Engine itself. This is the class that executes the tests and handles things like interacting with the GUI.\nThe Test context API, which is what you'll use to control the GUI and write the tests.","category":"page"},{"location":"api/","page":"API","title":"API","text":"danger: Danger\nFor the sake of simplicitly certain parts of the API are not memory-safe. This means that some test engine types are wrapped as raw pointers that are owned by C++ rather than Julia, which means that using them after they have been free'd will cause segfaults. All memory-unsafe types are marked as such in their docstrings.Because of all that, we recommend using such types only temporarily in the style recommended by the upstream examples. This style is good:# The test object is never even assigned to a variable\n@register_test(engine, \"foo\", \"bar\") do ctx\n    ...\nendThis style is less good:all_tests = []\nt = @register_test(engine, \"foo\", \"bar\")\nt.TestFunc = ...\n\n# Dangerous because it allows `t` to potentially be accessed after the\n# engine has been destroyed.\npush!(all_tests, t)","category":"page"},{"location":"api/","page":"API","title":"API","text":"Note that in all the examples in the docstrings below we assume that we have already evaluated:","category":"page"},{"location":"api/","page":"API","title":"API","text":"import CImGui as ig\nusing ImGuiTestEngine\nimport ImGuiTestEngine as te","category":"page"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md\"]\nDepth = 3","category":"page"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#Engine","page":"API","title":"Engine","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.Engine","page":"API","title":"ImGuiTestEngine.Engine","text":"mutable struct Engine\n\nRepresents a test engine context. This a wrapper around the upstream ImGuiTestEngine type. Don't create it yourself, use CreateContext().\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.CreateContext","page":"API","title":"ImGuiTestEngine.CreateContext","text":"CreateContext(\n;\n    exit_on_completion,\n    show_test_window\n) -> ImGuiTestEngine.Engine\n\n\nCreate a test engine context. The keyword arguments don't do anything in this library, they're used to support the test engine in CImGui.jl's renderloop.\n\nArguments\n\nexit_on_completion=true: Exit the program after the tests have completed.\nshow_test_window=true: Call ShowTestEngineWindows() while running the tests.\n\nExamples\n\nengine = te.CreateContext()\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.DestroyContext","page":"API","title":"ImGuiTestEngine.DestroyContext","text":"DestroyContext(engine::ImGuiTestEngine.Engine; throw)\n\n\nDestroy a test engine context.\n\nArguments\n\nthrow=true: Whether to throw an exception if the engine has already been destroyed.\n\nExamples\n\nengine = te.CreateContext()\nte.DestroyContext(engine)\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ShowTestEngineWindows","page":"API","title":"ImGuiTestEngine.ShowTestEngineWindows","text":"ShowTestEngineWindows(\n    engine::ImGuiTestEngine.Engine,\n    p_open\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.OpenSourceFile","page":"API","title":"ImGuiTestEngine.OpenSourceFile","text":"OpenSourceFile(\n    engine::ImGuiTestEngine.Engine,\n    source_filename,\n    source_line_no\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PrintResultSummary","page":"API","title":"ImGuiTestEngine.PrintResultSummary","text":"PrintResultSummary(engine::ImGuiTestEngine.Engine)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Export","page":"API","title":"ImGuiTestEngine.Export","text":"Export(engine::ImGuiTestEngine.Engine)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ExportEx","page":"API","title":"ImGuiTestEngine.ExportEx","text":"ExportEx(\n    engine::ImGuiTestEngine.Engine,\n    format::ImGuiTestEngine.lib.ImGuiTestEngineExportFormat,\n    filename\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Start","page":"API","title":"ImGuiTestEngine.Start","text":"Start(\n    engine::ImGuiTestEngine.Engine,\n    ui_ctx::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiContext}}\n)\n\n\nBind to a dear imgui context. Start coroutine.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Stop","page":"API","title":"ImGuiTestEngine.Stop","text":"Stop(engine::ImGuiTestEngine.Engine)\n\n\nStop coroutine and export if any. (Unbind will lazily happen on context shutdown).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PostSwap","page":"API","title":"ImGuiTestEngine.PostSwap","text":"PostSwap(engine::ImGuiTestEngine.Engine)\n\n\nCall every frame after framebuffer swap, will process screen capture and call test_io.ScreenCaptureFunc().\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetIO","page":"API","title":"ImGuiTestEngine.GetIO","text":"GetIO(\n    engine::ImGuiTestEngine.Engine\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestEngineIO}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.RegisterTest","page":"API","title":"ImGuiTestEngine.RegisterTest","text":"RegisterTest(\n    engine::ImGuiTestEngine.Engine,\n    category,\n    name\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTest}\nRegisterTest(\n    engine::ImGuiTestEngine.Engine,\n    category,\n    name,\n    src_file\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTest}\nRegisterTest(\n    engine::ImGuiTestEngine.Engine,\n    category,\n    name,\n    src_file,\n    src_line\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTest}\n\n\nPrefer calling IMREGISTERTEST().\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.UnregisterTest","page":"API","title":"ImGuiTestEngine.UnregisterTest","text":"UnregisterTest(\n    engine::ImGuiTestEngine.Engine,\n    test::ImGuiTestEngine.ImGuiTest\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.UnregisterAllTests","page":"API","title":"ImGuiTestEngine.UnregisterAllTests","text":"UnregisterAllTests(engine::ImGuiTestEngine.Engine)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.QueueTest","page":"API","title":"ImGuiTestEngine.QueueTest","text":"QueueTest(\n    engine::ImGuiTestEngine.Engine,\n    test::ImGuiTestEngine.ImGuiTest\n)\nQueueTest(\n    engine::ImGuiTestEngine.Engine,\n    test::ImGuiTestEngine.ImGuiTest,\n    run_flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.QueueTests","page":"API","title":"ImGuiTestEngine.QueueTests","text":"QueueTests(\n    engine::ImGuiTestEngine.Engine,\n    group::ImGuiTestEngine.lib.ImGuiTestGroup\n)\nQueueTests(\n    engine::ImGuiTestEngine.Engine,\n    group::ImGuiTestEngine.lib.ImGuiTestGroup,\n    filter\n)\nQueueTests(\n    engine::ImGuiTestEngine.Engine,\n    group::ImGuiTestEngine.lib.ImGuiTestGroup,\n    filter,\n    run_flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TryAbortEngine","page":"API","title":"ImGuiTestEngine.TryAbortEngine","text":"TryAbortEngine(engine::ImGuiTestEngine.Engine) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.AbortCurrentTest","page":"API","title":"ImGuiTestEngine.AbortCurrentTest","text":"AbortCurrentTest(engine::ImGuiTestEngine.Engine)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.FindTestByName","page":"API","title":"ImGuiTestEngine.FindTestByName","text":"FindTestByName(\n    engine::ImGuiTestEngine.Engine,\n    category,\n    name\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTest}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsTestQueueEmpty","page":"API","title":"ImGuiTestEngine.IsTestQueueEmpty","text":"IsTestQueueEmpty(engine::ImGuiTestEngine.Engine) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsUsingSimulatedInputs","page":"API","title":"ImGuiTestEngine.IsUsingSimulatedInputs","text":"IsUsingSimulatedInputs(\n    engine::ImGuiTestEngine.Engine\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetResultSummary","page":"API","title":"ImGuiTestEngine.GetResultSummary","text":"GetResultSummary(\n    engine::ImGuiTestEngine.Engine,\n    out_results::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestEngineResultSummary}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetTestList","page":"API","title":"ImGuiTestEngine.GetTestList","text":"GetTestList(\n    engine::ImGuiTestEngine.Engine,\n    out_tests::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImVector_ImGuiTest_Ptr}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetTestQueue","page":"API","title":"ImGuiTestEngine.GetTestQueue","text":"GetTestQueue(\n    engine::ImGuiTestEngine.Engine,\n    out_tests::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImVector_ImGuiTestRunTask}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#Registering-tests","page":"API","title":"Registering tests","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Once the engine is set up you can register some tests for it to run:","category":"page"},{"location":"api/#ImGuiTestEngine.@register_test","page":"API","title":"ImGuiTestEngine.@register_test","text":"@register_test(engine, category::AbstractString, name::AbstractString)::ImGuiTest\n@register_test(f::Function, engine,\n               category::AbstractString, name::AbstractString)::ImGuiTest\n\nRegister a ImGuiTest. Note that it will not be executed until the test is queued, either programmatically with QueueTests() or by the user running it manually through ShowTestEngineWindows().\n\nExamples\n\nIf you only need to set TestFunc you can use do-syntax:\n\nengine = te.CreateContext()\n@register_test(engine, \"foo\", \"bar\") do\n    @imtest ctx isa te.TestContext\nend\n\nTo set GuiFunc as well you'll need to set the GuiFunc property:\n\nengine = te.CreateContext()\nt = @register_test(engine, \"foo\", \"bar\")\nt.GuiFunc = () -> begin\n    ig.Begin(\"Foo\")\n    ig.End()\nend\nt.TestFunc = () -> @info \"Hello world!\"\n\n\n\n\n\n","category":"macro"},{"location":"api/#ImGuiTestEngine.ImGuiTest","page":"API","title":"ImGuiTestEngine.ImGuiTest","text":"mutable struct ImGuiTest\n\nWrapper around the upstream ImGuiTest. Don't create this yourself, use @register_test(). Once it's created you can assign functions to these properties:\n\nGuiFunc::Function, for standalone GUI code that you want to run/test. This shouldn't be necessary if you're testing your own GUI.\nTestFunc::Function, for tests that you want to execute.\n\nThe functions you assign should not take any arguments, and any return value will be discarded.\n\ndanger: Danger\nThis a memory-unsafe type, only use it while the engine is alive.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.SetOwnedName","page":"API","title":"ImGuiTestEngine.SetOwnedName","text":"SetOwnedName(self::Ptr{ImGuiTestEngine.ImGuiTest}, name)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/","page":"API","title":"API","text":"Within the tests you will often want to refer to parts of your interface by named reference. In the C++ API this is done with the ImGuiTestRef type but with ImGuiTestEngine.jl you should use either strings or integers and they will automatically be converted.","category":"page"},{"location":"api/#Test-context","page":"API","title":"Test context","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Inside GuiFunc and TestFunc you can use any methods of the test context API to control and test the GUI. It's not safe to use them outside of a GuiFunc/TestFunc.","category":"page"},{"location":"api/#ImGuiTestEngine.@imcheck","page":"API","title":"ImGuiTestEngine.@imcheck","text":"@imcheck expr\n\nA port of the upstream IM_CHECK() macro. Like the upstream macro, this will return early from the calling function if expr evaluates to false. Prefer using it over @test because it will register test results with the test engine, which can be convenient if you're using the built-in test engine window (see ShowTestEngineWindows()).\n\n@imcheck hooks into @testset's by default, so a failure will be recorded with your Julia Test tests as well as with the test engine. If this is not wanted it can be disabled by passing jltest=false.\n\nnote: Note\nA limitation of the current implementation is that nicely parsing the expression, e.g. to display both arguments of an equality, is not supported.\n\nExamples\n\nengine = te.CreateContext()\n@register_test(engine, \"foo\", \"bar\") do\n    # This record the result with `Test` as well as the test engine\n    @imcheck false\n\n    # This will only record the result with the test engine\n    @imcheck false jltest=false\nend\n\n\n\n\n\n","category":"macro"},{"location":"api/#ImGuiTestEngine.@imcheck_noret","page":"API","title":"ImGuiTestEngine.@imcheck_noret","text":"@imcheck_noret expr\n\nSame as @imcheck, except that it will not return early from the calling function.\n\n\n\n\n\n","category":"macro"},{"location":"api/#ImGuiTestEngine.OpenAndClose","page":"API","title":"ImGuiTestEngine.OpenAndClose","text":"OpenAndClose(\n    f,\n    test_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nA helper function that will ensure test_ref is open, execute f(), and close test_ref again. A typical use would be to open a section, run some tests, and then close the section again (handy for re-runnable tests).\n\nExamples\n\n@register_test(engine, \"foo\", \"bar\") do\n    OpenAndClose(\"My section\") do\n        # ...\n    end\nend\n\n\n\n\n\nOpenAndClose(\n    test_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nOpen and then close test_ref.\n\nExamples\n\n@register_test(engine, \"foo\", \"bar\") do\n    OpenAndClose(\"My section\")\nend\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Finish","page":"API","title":"ImGuiTestEngine.Finish","text":"Finish()\nFinish(status::ImGuiTestEngine.lib.ImGuiTestStatus)\n\n\nSet test status and stop running. Usually called when running test logic from GuiFunc() only.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.RunChildTest","page":"API","title":"ImGuiTestEngine.RunChildTest","text":"RunChildTest(\n    test_name\n) -> ImGuiTestEngine.lib.ImGuiTestStatus\nRunChildTest(\n    test_name,\n    flags\n) -> ImGuiTestEngine.lib.ImGuiTestStatus\n\n\n[Experimental] Run another test from the current test.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsError","page":"API","title":"ImGuiTestEngine.IsError","text":"IsError() -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsWarmUpGuiFrame","page":"API","title":"ImGuiTestEngine.IsWarmUpGuiFrame","text":"IsWarmUpGuiFrame() -> Bool\n\n\nUnless test->Flags has ImGuiTestFlags_NoGuiWarmUp, we run GuiFunc() twice before running TestFunc(). Those frames are called \"WarmUp\" frames.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsFirstGuiFrame","page":"API","title":"ImGuiTestEngine.IsFirstGuiFrame","text":"IsFirstGuiFrame() -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsFirstTestFrame","page":"API","title":"ImGuiTestEngine.IsFirstTestFrame","text":"IsFirstTestFrame() -> Bool\n\n\nFirst frame where TestFunc is running (after warm-up frame).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsGuiFuncOnly","page":"API","title":"ImGuiTestEngine.IsGuiFuncOnly","text":"IsGuiFuncOnly() -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SuspendTestFunc","page":"API","title":"ImGuiTestEngine.SuspendTestFunc","text":"SuspendTestFunc() -> Bool\nSuspendTestFunc(file) -> Bool\nSuspendTestFunc(file, line) -> Bool\n\n\n[DEBUG] Generally called via IMSUSPENDTESTFUNC.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogEx","page":"API","title":"ImGuiTestEngine.LogEx","text":"LogEx(\n    level::ImGuiTestEngine.lib.ImGuiTestVerboseLevel,\n    flags,\n    fmt\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogToTTY","page":"API","title":"ImGuiTestEngine.LogToTTY","text":"LogToTTY(\n    level::ImGuiTestEngine.lib.ImGuiTestVerboseLevel,\n    message\n)\nLogToTTY(\n    level::ImGuiTestEngine.lib.ImGuiTestVerboseLevel,\n    message,\n    message_end\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogToDebugger","page":"API","title":"ImGuiTestEngine.LogToDebugger","text":"LogToDebugger(\n    level::ImGuiTestEngine.lib.ImGuiTestVerboseLevel,\n    message\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogDebug","page":"API","title":"ImGuiTestEngine.LogDebug","text":"LogDebug(fmt)\n\n\nImGuiTestVerboseLevelDebug or ImGuiTestVerboseLevelTrace depending on context depth.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogInfo","page":"API","title":"ImGuiTestEngine.LogInfo","text":"LogInfo(fmt)\n\n\nImGuiTestVerboseLevel_Info.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogWarning","page":"API","title":"ImGuiTestEngine.LogWarning","text":"LogWarning(fmt)\n\n\nImGuiTestVerboseLevel_Warning.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogError","page":"API","title":"ImGuiTestEngine.LogError","text":"LogError(fmt)\n\n\nImGuiTestVerboseLevel_Error.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogBasicUiState","page":"API","title":"ImGuiTestEngine.LogBasicUiState","text":"LogBasicUiState()\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LogItemList","page":"API","title":"ImGuiTestEngine.LogItemList","text":"LogItemList(\n    list::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestItemList}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Yield","page":"API","title":"ImGuiTestEngine.Yield","text":"Yield(engine::ImGuiTestEngine.Engine)\n\n\nwarning: Warning\nThis function is internal, it may change in the future.\n\nUpstream link.\n\n\n\n\n\nYield()\nYield(count)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Sleep","page":"API","title":"ImGuiTestEngine.Sleep","text":"Sleep(time_in_second)\n\n\nSleep for a given simulation time, unless in Fast mode.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SleepShort","page":"API","title":"ImGuiTestEngine.SleepShort","text":"SleepShort()\n\n\nStandard short delay of io.ActionDelayShort (~0.15f), unless in Fast mode.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SleepStandard","page":"API","title":"ImGuiTestEngine.SleepStandard","text":"SleepStandard()\n\n\nStandard regular delay of io.ActionDelayStandard (~0.40f), unless in Fast mode.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SleepNoSkip","page":"API","title":"ImGuiTestEngine.SleepNoSkip","text":"SleepNoSkip(time_in_second, framestep_in_second)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SetRef","page":"API","title":"ImGuiTestEngine.SetRef","text":"SetRef(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\nSetRef(window::Ref{CImGui.lib.ImGuiWindow})\n\n\nShortcut to SetRef(window->Name) which works for ChildWindow (see code).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetRef","page":"API","title":"ImGuiTestEngine.GetRef","text":"GetRef() -> ImGuiTestEngine.lib.ImGuiTestRef\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowInfo","page":"API","title":"ImGuiTestEngine.WindowInfo","text":"WindowInfo(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> ImGuiTestEngine.lib.ImGuiTestItemInfo\nWindowInfo(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n) -> ImGuiTestEngine.lib.ImGuiTestItemInfo\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowClose","page":"API","title":"ImGuiTestEngine.WindowClose","text":"WindowClose(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowCollapse","page":"API","title":"ImGuiTestEngine.WindowCollapse","text":"WindowCollapse(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    collapsed\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowFocus","page":"API","title":"ImGuiTestEngine.WindowFocus","text":"WindowFocus(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nWindowFocus(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowBringToFront","page":"API","title":"ImGuiTestEngine.WindowBringToFront","text":"WindowBringToFront(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nWindowBringToFront(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowMove","page":"API","title":"ImGuiTestEngine.WindowMove","text":"WindowMove(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    pos::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\nWindowMove(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    pos::Union{CImGui.lib.ImVec2, Tuple{T, T} where T},\n    pivot::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\nWindowMove(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    pos::Union{CImGui.lib.ImVec2, Tuple{T, T} where T},\n    pivot::Union{CImGui.lib.ImVec2, Tuple{T, T} where T},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowResize","page":"API","title":"ImGuiTestEngine.WindowResize","text":"WindowResize(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    sz::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowTeleportToMakePosVisible","page":"API","title":"ImGuiTestEngine.WindowTeleportToMakePosVisible","text":"WindowTeleportToMakePosVisible(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    pos_in_window::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetWindowByRef","page":"API","title":"ImGuiTestEngine.GetWindowByRef","text":"GetWindowByRef(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Ptr{CImGui.lib.ImGuiWindow}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PopupCloseOne","page":"API","title":"ImGuiTestEngine.PopupCloseOne","text":"PopupCloseOne()\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PopupCloseAll","page":"API","title":"ImGuiTestEngine.PopupCloseAll","text":"PopupCloseAll()\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PopupGetWindowID","page":"API","title":"ImGuiTestEngine.PopupGetWindowID","text":"PopupGetWindowID(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> UInt32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetID","page":"API","title":"ImGuiTestEngine.GetID","text":"GetID(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> UInt32\n\n\nUpstream link.\n\n\n\n\n\nGetID(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    seed_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> UInt32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetPosOnVoid","page":"API","title":"ImGuiTestEngine.GetPosOnVoid","text":"GetPosOnVoid(\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}}\n) -> Any\n\n\nFind a point that has no windows // FIXME: This needs error return and flag to enable/disable forcefully finding void.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetWindowTitlebarPoint","page":"API","title":"ImGuiTestEngine.GetWindowTitlebarPoint","text":"GetWindowTitlebarPoint(\n    window_ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Any\n\n\nReturn a clickable point on window title-bar (window tab for docked windows).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetMainMonitorWorkPos","page":"API","title":"ImGuiTestEngine.GetMainMonitorWorkPos","text":"GetMainMonitorWorkPos() -> Any\n\n\nWork pos and size of main viewport when viewports are disabled, or work pos and size of monitor containing main viewport when viewports are enabled.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetMainMonitorWorkSize","page":"API","title":"ImGuiTestEngine.GetMainMonitorWorkSize","text":"GetMainMonitorWorkSize() -> Any\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureReset","page":"API","title":"ImGuiTestEngine.CaptureReset","text":"CaptureReset()\n\n\nReset state (use when doing multiple captures).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureSetExtension","page":"API","title":"ImGuiTestEngine.CaptureSetExtension","text":"CaptureSetExtension(ext)\n\n\nSet capture file format (otherwise for video this default to EngineIO->VideoCaptureExtension).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureAddWindow","page":"API","title":"ImGuiTestEngine.CaptureAddWindow","text":"CaptureAddWindow(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Bool\n\n\nAdd window to be captured (default to capture everything).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureScreenshotWindow","page":"API","title":"ImGuiTestEngine.CaptureScreenshotWindow","text":"CaptureScreenshotWindow(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nCaptureScreenshotWindow(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    capture_flags\n)\n\n\nTrigger a screen capture of a single window (== CaptureAddWindow() + CaptureScreenshot()).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureScreenshot","page":"API","title":"ImGuiTestEngine.CaptureScreenshot","text":"CaptureScreenshot(\n    engine::ImGuiTestEngine.Engine,\n    args::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiCaptureArgs}}\n) -> Bool\n\n\nwarning: Warning\nThis function is internal, it may change in the future.\n\nUpstream link.\n\n\n\n\n\nCaptureScreenshot() -> Bool\nCaptureScreenshot(capture_flags) -> Bool\n\n\nTrigger a screen capture.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureBeginVideo","page":"API","title":"ImGuiTestEngine.CaptureBeginVideo","text":"CaptureBeginVideo(\n    engine::ImGuiTestEngine.Engine,\n    args::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiCaptureArgs}}\n) -> Bool\n\n\nwarning: Warning\nThis function is internal, it may change in the future.\n\nUpstream link.\n\n\n\n\n\nCaptureBeginVideo() -> Bool\n\n\nStart a video capture.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureEndVideo","page":"API","title":"ImGuiTestEngine.CaptureEndVideo","text":"CaptureEndVideo(\n    engine::ImGuiTestEngine.Engine,\n    args::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiCaptureArgs}}\n) -> Bool\n\n\nwarning: Warning\nThis function is internal, it may change in the future.\n\nUpstream link.\n\n\n\n\n\nCaptureEndVideo() -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseMove","page":"API","title":"ImGuiTestEngine.MouseMove","text":"MouseMove(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nMouseMove(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseMoveToPos","page":"API","title":"ImGuiTestEngine.MouseMoveToPos","text":"MouseMoveToPos(\n    pos::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseTeleportToPos","page":"API","title":"ImGuiTestEngine.MouseTeleportToPos","text":"MouseTeleportToPos(\n    pos::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\nMouseTeleportToPos(\n    pos::Union{CImGui.lib.ImVec2, Tuple{T, T} where T},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseClick","page":"API","title":"ImGuiTestEngine.MouseClick","text":"MouseClick()\nMouseClick(button)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseClickMulti","page":"API","title":"ImGuiTestEngine.MouseClickMulti","text":"MouseClickMulti(button, count)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseDoubleClick","page":"API","title":"ImGuiTestEngine.MouseDoubleClick","text":"MouseDoubleClick()\nMouseDoubleClick(button)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseDown","page":"API","title":"ImGuiTestEngine.MouseDown","text":"MouseDown()\nMouseDown(button)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseUp","page":"API","title":"ImGuiTestEngine.MouseUp","text":"MouseUp()\nMouseUp(button)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseLiftDragThreshold","page":"API","title":"ImGuiTestEngine.MouseLiftDragThreshold","text":"MouseLiftDragThreshold()\nMouseLiftDragThreshold(button)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseDragWithDelta","page":"API","title":"ImGuiTestEngine.MouseDragWithDelta","text":"MouseDragWithDelta(\n    delta::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\nMouseDragWithDelta(\n    delta::Union{CImGui.lib.ImVec2, Tuple{T, T} where T},\n    button\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseWheel","page":"API","title":"ImGuiTestEngine.MouseWheel","text":"MouseWheel(\n    delta::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseWheelX","page":"API","title":"ImGuiTestEngine.MouseWheelX","text":"MouseWheelX(dx)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseWheelY","page":"API","title":"ImGuiTestEngine.MouseWheelY","text":"MouseWheelY(dy)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseMoveToVoid","page":"API","title":"ImGuiTestEngine.MouseMoveToVoid","text":"MouseMoveToVoid()\nMouseMoveToVoid(\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseClickOnVoid","page":"API","title":"ImGuiTestEngine.MouseClickOnVoid","text":"MouseClickOnVoid()\nMouseClickOnVoid(button)\nMouseClickOnVoid(\n    button,\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.FindHoveredWindowAtPos","page":"API","title":"ImGuiTestEngine.FindHoveredWindowAtPos","text":"FindHoveredWindowAtPos(\n    pos::Union{Ptr{Nothing}, Ref{CImGui.lib.ImVec2}, Ref{Tuple{T, T} where T}}\n) -> Ptr{CImGui.lib.ImGuiWindow}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.FindExistingVoidPosOnViewport","page":"API","title":"ImGuiTestEngine.FindExistingVoidPosOnViewport","text":"FindExistingVoidPosOnViewport(\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}},\n    out::Union{Ptr{Nothing}, Ref{CImGui.lib.ImVec2}, Ref{Tuple{T, T} where T}}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseSetViewport","page":"API","title":"ImGuiTestEngine.MouseSetViewport","text":"MouseSetViewport(\n    window::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiWindow}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MouseSetViewportID","page":"API","title":"ImGuiTestEngine.MouseSetViewportID","text":"MouseSetViewportID(viewport_id)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyDown","page":"API","title":"ImGuiTestEngine.KeyDown","text":"KeyDown(key_chord)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyUp","page":"API","title":"ImGuiTestEngine.KeyUp","text":"KeyUp(key_chord)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyPress","page":"API","title":"ImGuiTestEngine.KeyPress","text":"KeyPress(key_chord)\nKeyPress(key_chord, count)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyHold","page":"API","title":"ImGuiTestEngine.KeyHold","text":"KeyHold(key_chord, time)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeySetEx","page":"API","title":"ImGuiTestEngine.KeySetEx","text":"KeySetEx(key_chord, is_down, time)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyChars","page":"API","title":"ImGuiTestEngine.KeyChars","text":"KeyChars(chars)\n\n\nInput characters.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyCharsAppend","page":"API","title":"ImGuiTestEngine.KeyCharsAppend","text":"KeyCharsAppend(chars)\n\n\nInput characters at end of field.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyCharsAppendEnter","page":"API","title":"ImGuiTestEngine.KeyCharsAppendEnter","text":"KeyCharsAppendEnter(chars)\n\n\nInput characters at end of field, press Enter.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyCharsReplace","page":"API","title":"ImGuiTestEngine.KeyCharsReplace","text":"KeyCharsReplace(chars)\n\n\nDelete existing field then input characters.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.KeyCharsReplaceEnter","page":"API","title":"ImGuiTestEngine.KeyCharsReplaceEnter","text":"KeyCharsReplaceEnter(chars)\n\n\nDelete existing field then input characters, press Enter.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SetInputMode","page":"API","title":"ImGuiTestEngine.SetInputMode","text":"SetInputMode(input_mode::CImGui.lib.ImGuiInputSource)\n\n\nMouse or Keyboard or Gamepad. In Keyboard or Gamepad mode, actions such as ItemClick or ItemInput are using nav facilities instead of Mouse.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.NavMoveTo","page":"API","title":"ImGuiTestEngine.NavMoveTo","text":"NavMoveTo(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.NavActivate","page":"API","title":"ImGuiTestEngine.NavActivate","text":"NavActivate()\n\n\nActivate current selected item: activate button, tweak sliders/drags. Equivalent of pressing Space on keyboard, ImGuiKey_GamepadFaceUp on a gamepad.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.NavInput","page":"API","title":"ImGuiTestEngine.NavInput","text":"NavInput()\n\n\nInput into select item: input sliders/drags. Equivalent of pressing Enter on keyboard, ImGuiKey_GamepadFaceDown on a gamepad.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollTo","page":"API","title":"ImGuiTestEngine.ScrollTo","text":"ScrollTo(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    axis::CImGui.lib.ImGuiAxis,\n    scroll_v\n)\nScrollTo(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    axis::CImGui.lib.ImGuiAxis,\n    scroll_v,\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToX","page":"API","title":"ImGuiTestEngine.ScrollToX","text":"ScrollToX(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    scroll_x\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToY","page":"API","title":"ImGuiTestEngine.ScrollToY","text":"ScrollToY(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    scroll_y\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToTop","page":"API","title":"ImGuiTestEngine.ScrollToTop","text":"ScrollToTop(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToBottom","page":"API","title":"ImGuiTestEngine.ScrollToBottom","text":"ScrollToBottom(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToItem","page":"API","title":"ImGuiTestEngine.ScrollToItem","text":"ScrollToItem(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    axis::CImGui.lib.ImGuiAxis\n)\nScrollToItem(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    axis::CImGui.lib.ImGuiAxis,\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToItemX","page":"API","title":"ImGuiTestEngine.ScrollToItemX","text":"ScrollToItemX(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToItemY","page":"API","title":"ImGuiTestEngine.ScrollToItemY","text":"ScrollToItemY(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollToTabItem","page":"API","title":"ImGuiTestEngine.ScrollToTabItem","text":"ScrollToTabItem(\n    tab_bar::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTabBar}},\n    tab_id\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollErrorCheck","page":"API","title":"ImGuiTestEngine.ScrollErrorCheck","text":"ScrollErrorCheck(\n    axis::CImGui.lib.ImGuiAxis,\n    expected,\n    actual,\n    remaining_attempts\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ScrollVerifyScrollMax","page":"API","title":"ImGuiTestEngine.ScrollVerifyScrollMax","text":"ScrollVerifyScrollMax(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemInfo","page":"API","title":"ImGuiTestEngine.ItemInfo","text":"ItemInfo(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> ImGuiTestEngine.lib.ImGuiTestItemInfo\nItemInfo(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n) -> ImGuiTestEngine.lib.ImGuiTestItemInfo\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemInfoOpenFullPath","page":"API","title":"ImGuiTestEngine.ItemInfoOpenFullPath","text":"ItemInfoOpenFullPath(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> ImGuiTestEngine.lib.ImGuiTestItemInfo\nItemInfoOpenFullPath(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n) -> ImGuiTestEngine.lib.ImGuiTestItemInfo\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemInfoHandleWildcardSearch","page":"API","title":"ImGuiTestEngine.ItemInfoHandleWildcardSearch","text":"ItemInfoHandleWildcardSearch(\n    wildcard_prefix_start,\n    wildcard_prefix_end,\n    wildcard_suffix_start\n) -> UInt32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemInfoNull","page":"API","title":"ImGuiTestEngine.ItemInfoNull","text":"ItemInfoNull() -> ImGuiTestEngine.lib.ImGuiTestItemInfo\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GatherItems","page":"API","title":"ImGuiTestEngine.GatherItems","text":"GatherItems(\n    out_list::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestItemList}},\n    parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nGatherItems(\n    out_list::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestItemList}},\n    parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    depth\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemAction","page":"API","title":"ImGuiTestEngine.ItemAction","text":"ItemAction(\n    action::ImGuiTestEngine.lib.ImGuiTestAction,\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemAction(\n    action::ImGuiTestEngine.lib.ImGuiTestAction,\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\nItemAction(\n    action::ImGuiTestEngine.lib.ImGuiTestAction,\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags,\n    action_arg\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemClick","page":"API","title":"ImGuiTestEngine.ItemClick","text":"ItemClick(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemClick(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    button\n)\nItemClick(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    button,\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemDoubleClick","page":"API","title":"ImGuiTestEngine.ItemDoubleClick","text":"ItemDoubleClick(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemDoubleClick(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemCheck","page":"API","title":"ImGuiTestEngine.ItemCheck","text":"ItemCheck(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemCheck(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemUncheck","page":"API","title":"ImGuiTestEngine.ItemUncheck","text":"ItemUncheck(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemUncheck(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemOpen","page":"API","title":"ImGuiTestEngine.ItemOpen","text":"ItemOpen(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemOpen(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemClose","page":"API","title":"ImGuiTestEngine.ItemClose","text":"ItemClose(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemClose(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemInput","page":"API","title":"ImGuiTestEngine.ItemInput","text":"ItemInput(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemInput(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemNavActivate","page":"API","title":"ImGuiTestEngine.ItemNavActivate","text":"ItemNavActivate(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemNavActivate(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemActionAll","page":"API","title":"ImGuiTestEngine.ItemActionAll","text":"ItemActionAll(\n    action::ImGuiTestEngine.lib.ImGuiTestAction,\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemActionAll(\n    action::ImGuiTestEngine.lib.ImGuiTestAction,\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    filter::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestActionFilter}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemOpenAll","page":"API","title":"ImGuiTestEngine.ItemOpenAll","text":"ItemOpenAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemOpenAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    depth\n)\nItemOpenAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    depth,\n    passes\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemCloseAll","page":"API","title":"ImGuiTestEngine.ItemCloseAll","text":"ItemCloseAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemCloseAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    depth\n)\nItemCloseAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    depth,\n    passes\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemInputValue","page":"API","title":"ImGuiTestEngine.ItemInputValue","text":"ItemInputValue(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    v::Integer\n)\n\n\nUpstream link.\n\n\n\n\n\nItemInputValue(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    f::Real\n)\n\n\nUpstream link.\n\n\n\n\n\nItemInputValue(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    str::Union{Ptr{Int8}, Ptr{Nothing}, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemReadAsInt","page":"API","title":"ImGuiTestEngine.ItemReadAsInt","text":"ItemReadAsInt(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Int32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemReadAsFloat","page":"API","title":"ImGuiTestEngine.ItemReadAsFloat","text":"ItemReadAsFloat(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Float32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemReadAsScalar","page":"API","title":"ImGuiTestEngine.ItemReadAsScalar","text":"ItemReadAsScalar(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    data_type,\n    out_data\n) -> Bool\nItemReadAsScalar(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    data_type,\n    out_data,\n    flags\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemReadAsString","page":"API","title":"ImGuiTestEngine.ItemReadAsString","text":"ItemReadAsString(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Ptr{Int8}\n\n\nUpstream link.\n\n\n\n\n\nItemReadAsString(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    out_buf::Union{Ptr{Int8}, Ptr{Nothing}, String},\n    out_buf_size::Real\n) -> UInt64\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemExists","page":"API","title":"ImGuiTestEngine.ItemExists","text":"ItemExists(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemIsChecked","page":"API","title":"ImGuiTestEngine.ItemIsChecked","text":"ItemIsChecked(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemIsOpened","page":"API","title":"ImGuiTestEngine.ItemIsOpened","text":"ItemIsOpened(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemVerifyCheckedIfAlive","page":"API","title":"ImGuiTestEngine.ItemVerifyCheckedIfAlive","text":"ItemVerifyCheckedIfAlive(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    checked\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemHold","page":"API","title":"ImGuiTestEngine.ItemHold","text":"ItemHold(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    time\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemHoldForFrames","page":"API","title":"ImGuiTestEngine.ItemHoldForFrames","text":"ItemHoldForFrames(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    frames\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemDragOverAndHold","page":"API","title":"ImGuiTestEngine.ItemDragOverAndHold","text":"ItemDragOverAndHold(\n    ref_src::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    ref_dst::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemDragAndDrop","page":"API","title":"ImGuiTestEngine.ItemDragAndDrop","text":"ItemDragAndDrop(\n    ref_src::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    ref_dst::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nItemDragAndDrop(\n    ref_src::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    ref_dst::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    button\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ItemDragWithDelta","page":"API","title":"ImGuiTestEngine.ItemDragWithDelta","text":"ItemDragWithDelta(\n    ref_src::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    pos_delta::Union{CImGui.lib.ImVec2, Tuple{T, T} where T}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TabClose","page":"API","title":"ImGuiTestEngine.TabClose","text":"TabClose(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TabBarCompareOrder","page":"API","title":"ImGuiTestEngine.TabBarCompareOrder","text":"TabBarCompareOrder(\n    tab_bar::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTabBar}},\n    tab_order\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MenuAction","page":"API","title":"ImGuiTestEngine.MenuAction","text":"MenuAction(\n    action::ImGuiTestEngine.lib.ImGuiTestAction,\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MenuActionAll","page":"API","title":"ImGuiTestEngine.MenuActionAll","text":"MenuActionAll(\n    action::ImGuiTestEngine.lib.ImGuiTestAction,\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MenuClick","page":"API","title":"ImGuiTestEngine.MenuClick","text":"MenuClick(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MenuCheck","page":"API","title":"ImGuiTestEngine.MenuCheck","text":"MenuCheck(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MenuUncheck","page":"API","title":"ImGuiTestEngine.MenuUncheck","text":"MenuUncheck(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MenuCheckAll","page":"API","title":"ImGuiTestEngine.MenuCheckAll","text":"MenuCheckAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.MenuUncheckAll","page":"API","title":"ImGuiTestEngine.MenuUncheckAll","text":"MenuUncheckAll(\n    ref_parent::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ComboClick","page":"API","title":"ImGuiTestEngine.ComboClick","text":"ComboClick(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ComboClickAll","page":"API","title":"ImGuiTestEngine.ComboClickAll","text":"ComboClickAll(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TableOpenContextMenu","page":"API","title":"ImGuiTestEngine.TableOpenContextMenu","text":"TableOpenContextMenu(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nTableOpenContextMenu(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    column_n\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TableClickHeader","page":"API","title":"ImGuiTestEngine.TableClickHeader","text":"TableClickHeader(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    label\n) -> CImGui.lib.ImGuiSortDirection\nTableClickHeader(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    label,\n    key_mods\n) -> CImGui.lib.ImGuiSortDirection\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TableSetColumnEnabled","page":"API","title":"ImGuiTestEngine.TableSetColumnEnabled","text":"TableSetColumnEnabled(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    label,\n    enabled\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TableResizeColumn","page":"API","title":"ImGuiTestEngine.TableResizeColumn","text":"TableResizeColumn(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    column_n,\n    width\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TableGetSortSpecs","page":"API","title":"ImGuiTestEngine.TableGetSortSpecs","text":"TableGetSortSpecs(\n    ref::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n) -> Ptr{CImGui.lib.ImGuiTableSortSpecs}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ViewportPlatform_SetWindowPos","page":"API","title":"ImGuiTestEngine.ViewportPlatform_SetWindowPos","text":"ViewportPlatform_SetWindowPos(\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}},\n    pos::Union{Ptr{Nothing}, Ref{CImGui.lib.ImVec2}, Ref{Tuple{T, T} where T}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ViewportPlatform_SetWindowSize","page":"API","title":"ImGuiTestEngine.ViewportPlatform_SetWindowSize","text":"ViewportPlatform_SetWindowSize(\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}},\n    size::Union{Ptr{Nothing}, Ref{CImGui.lib.ImVec2}, Ref{Tuple{T, T} where T}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ViewportPlatform_SetWindowFocus","page":"API","title":"ImGuiTestEngine.ViewportPlatform_SetWindowFocus","text":"ViewportPlatform_SetWindowFocus(\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ViewportPlatform_CloseWindow","page":"API","title":"ImGuiTestEngine.ViewportPlatform_CloseWindow","text":"ViewportPlatform_CloseWindow(\n    viewport::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiViewport}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.DockClear","page":"API","title":"ImGuiTestEngine.DockClear","text":"DockClear(window_name)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.DockInto","page":"API","title":"ImGuiTestEngine.DockInto","text":"DockInto(\n    src_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    dst_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String}\n)\nDockInto(\n    src_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    dst_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    split_dir::CImGui.lib.ImGuiDir\n)\nDockInto(\n    src_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    dst_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    split_dir::CImGui.lib.ImGuiDir,\n    is_outer_docking\n)\nDockInto(\n    src_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    dst_id::Union{Int64, ImGuiTestEngine.lib.ImGuiTestRef, String},\n    split_dir::CImGui.lib.ImGuiDir,\n    is_outer_docking,\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.UndockNode","page":"API","title":"ImGuiTestEngine.UndockNode","text":"UndockNode(dock_id)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.UndockWindow","page":"API","title":"ImGuiTestEngine.UndockWindow","text":"UndockWindow(window_name)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.WindowIsUndockedOrStandalone","page":"API","title":"ImGuiTestEngine.WindowIsUndockedOrStandalone","text":"WindowIsUndockedOrStandalone(\n    window::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiWindow}}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.DockIdIsUndockedOrStandalone","page":"API","title":"ImGuiTestEngine.DockIdIsUndockedOrStandalone","text":"DockIdIsUndockedOrStandalone(dock_id) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.DockNodeHideTabBar","page":"API","title":"ImGuiTestEngine.DockNodeHideTabBar","text":"DockNodeHideTabBar(\n    node::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiDockNode}},\n    hidden\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PerfCalcRef","page":"API","title":"ImGuiTestEngine.PerfCalcRef","text":"PerfCalcRef()\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PerfCapture","page":"API","title":"ImGuiTestEngine.PerfCapture","text":"PerfCapture()\nPerfCapture(category)\nPerfCapture(category, test_name)\nPerfCapture(category, test_name, csv_file)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#Other","page":"API","title":"Other","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"These functions/types are less commonly used than the ones documented above.","category":"page"},{"location":"api/#ImGuiTestRef","page":"API","title":"ImGuiTestRef","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.ImGuiTestRef","page":"API","title":"ImGuiTestEngine.ImGuiTestRef","text":"ImGuiTestRef() -> ImGuiTestEngine.lib.ImGuiTestRef\n\n\nUpstream link.\n\n\n\n\n\nImGuiTestRef(\n    id::Integer\n) -> ImGuiTestEngine.lib.ImGuiTestRef\n\n\nUpstream link.\n\n\n\n\n\nImGuiTestRef(\n    path::Union{Ptr{Int8}, Ptr{Nothing}, String}\n) -> ImGuiTestEngine.lib.ImGuiTestRef\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.IsEmpty","page":"API","title":"ImGuiTestEngine.IsEmpty","text":"IsEmpty(self::Ptr{ImGuiTestEngine.lib.ImGuiTestLog}) -> Bool\n\n\nUpstream link.\n\n\n\n\n\nIsEmpty(self::Ptr{ImGuiTestEngine.lib.ImGuiTestRef}) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestRefDesc","page":"API","title":"ImGuiTestRefDesc","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.C_str","page":"API","title":"ImGuiTestEngine.C_str","text":"C_str(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestRefDesc}\n) -> Ptr{Int8}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImGuiTestRefDesc","page":"API","title":"ImGuiTestEngine.ImGuiTestRefDesc","text":"ImGuiTestRefDesc(\n    ref::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestRef}}\n) -> ImGuiTestEngine.lib.ImGuiTestRefDesc\n\n\nUpstream link.\n\n\n\n\n\nImGuiTestRefDesc(\n    ref::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestRef}},\n    item::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestItemInfo}}\n) -> ImGuiTestEngine.lib.ImGuiTestRefDesc\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestGenericItemStatus","page":"API","title":"ImGuiTestGenericItemStatus","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.ImGuiTestGenericItemStatus","page":"API","title":"ImGuiTestEngine.ImGuiTestGenericItemStatus","text":"ImGuiTestGenericItemStatus(\n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestGenericItemStatus}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.QuerySet","page":"API","title":"ImGuiTestEngine.QuerySet","text":"QuerySet(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestGenericItemStatus}\n)\nQuerySet(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestGenericItemStatus},\n    ret_val\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.QueryInc","page":"API","title":"ImGuiTestEngine.QueryInc","text":"QueryInc(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestGenericItemStatus}\n)\nQueryInc(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestGenericItemStatus},\n    ret_val\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Draw","page":"API","title":"ImGuiTestEngine.Draw","text":"Draw(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestGenericItemStatus}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestItemList","page":"API","title":"ImGuiTestItemList","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.Reserve","page":"API","title":"ImGuiTestEngine.Reserve","text":"Reserve(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList},\n    capacity\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetSize","page":"API","title":"ImGuiTestEngine.GetSize","text":"GetSize(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList}\n) -> Int32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetByIndex","page":"API","title":"ImGuiTestEngine.GetByIndex","text":"GetByIndex(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList},\n    n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestItemInfo}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetByID","page":"API","title":"ImGuiTestEngine.GetByID","text":"GetByID(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList},\n    id\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestItemInfo}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Size","page":"API","title":"ImGuiTestEngine.Size","text":"Size(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList}\n) -> UInt64\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Begin","page":"API","title":"ImGuiTestEngine.Begin","text":"Begin(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList}\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestItemInfo}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.End","page":"API","title":"ImGuiTestEngine.End","text":"End(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList}\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestItemInfo}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiPerfTool","page":"API","title":"ImGuiPerfTool","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.ImGuiPerfTool","page":"API","title":"ImGuiTestEngine.ImGuiPerfTool","text":"ImGuiPerfTool() -> Ptr{ImGuiTestEngine.lib.ImGuiPerfTool}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.Clear","page":"API","title":"ImGuiTestEngine.Clear","text":"Clear(self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureImageBuf})\n\n\nFree allocated memory buffer if such exists.\n\nUpstream link.\n\n\n\n\n\nClear(self::Ptr{ImGuiTestEngine.lib.ImGuiTestItemList})\n\n\nUpstream link.\n\n\n\n\n\nClear(self::Ptr{ImGuiTestEngine.lib.ImGuiTestLog})\n\n\nUpstream link.\n\n\n\n\n\nClear(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestGenericItemStatus}\n)\n\n\nUpstream link.\n\n\n\n\n\nClear(self::Ptr{ImGuiTestEngine.lib.ImGuiTestGenericVars})\n\n\nUpstream link.\n\n\n\n\n\nClear(self::Ptr{ImGuiTestEngine.lib.ImGuiCsvParser})\n\n\nFree allocated buffers.\n\nUpstream link.\n\n\n\n\n\nClear(self::Ptr{ImGuiTestEngine.lib.ImGuiTestGatherTask})\n\n\nwarning: Warning\nThis function is internal, it may change in the future.\n\nUpstream link.\n\n\n\n\n\nClear(self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool})\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.LoadCSV","page":"API","title":"ImGuiTestEngine.LoadCSV","text":"LoadCSV(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool}\n) -> Bool\nLoadCSV(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    filename\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.AddEntry","page":"API","title":"ImGuiTestEngine.AddEntry","text":"AddEntry(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    entry::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiPerfToolEntry}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ShowPerfToolWindow","page":"API","title":"ImGuiTestEngine.ShowPerfToolWindow","text":"ShowPerfToolWindow(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    engine::ImGuiTestEngine.Engine,\n    p_open\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ViewOnly","page":"API","title":"ImGuiTestEngine.ViewOnly","text":"ViewOnly(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    perf_name::Union{Ptr{Int8}, String}\n)\n\n\nUpstream link.\n\n\n\n\n\nViewOnly(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    perf_names::Ref{Vector{String}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetEntryByBatchIdx","page":"API","title":"ImGuiTestEngine.GetEntryByBatchIdx","text":"GetEntryByBatchIdx(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    idx\n) -> Ptr{ImGuiTestEngine.lib.ImGuiPerfToolEntry}\nGetEntryByBatchIdx(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    idx,\n    perf_name\n) -> Ptr{ImGuiTestEngine.lib.ImGuiPerfToolEntry}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SaveHtmlReport","page":"API","title":"ImGuiTestEngine.SaveHtmlReport","text":"SaveHtmlReport(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    file_name\n) -> Bool\nSaveHtmlReport(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool},\n    file_name,\n    image_file\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Empty","page":"API","title":"ImGuiTestEngine.Empty","text":"Empty(self::Ptr{ImGuiTestEngine.lib.ImGuiPerfTool}) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/","page":"API","title":"API","text":"ImGuiPerfToolEntry:","category":"page"},{"location":"api/#ImGuiTestEngine.ImGuiPerfToolEntry","page":"API","title":"ImGuiTestEngine.ImGuiPerfToolEntry","text":"ImGuiPerfToolEntry(\n    rhs::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiPerfToolEntry}}\n) -> Ptr{ImGuiTestEngine.lib.ImGuiPerfToolEntry}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.Set","page":"API","title":"ImGuiTestEngine.Set","text":"Set(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiPerfToolEntry},\n    rhs::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiPerfToolEntry}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiCaptureContext","page":"API","title":"ImGuiCaptureContext","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.ImGuiCaptureContext","page":"API","title":"ImGuiTestEngine.ImGuiCaptureContext","text":"ImGuiCaptureContext(\n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\nImGuiCaptureContext(\n    capture_func::Ref{Nothing}\n) -> Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.PreNewFrame","page":"API","title":"ImGuiTestEngine.PreNewFrame","text":"PreNewFrame(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PreRender","page":"API","title":"ImGuiTestEngine.PreRender","text":"PreRender(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PostRender","page":"API","title":"ImGuiTestEngine.PostRender","text":"PostRender(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CaptureUpdate","page":"API","title":"ImGuiTestEngine.CaptureUpdate","text":"CaptureUpdate(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext},\n    args::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiCaptureArgs}}\n) -> ImGuiTestEngine.lib.ImGuiCaptureStatus\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.RestoreBackedUpData","page":"API","title":"ImGuiTestEngine.RestoreBackedUpData","text":"RestoreBackedUpData(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ClearState","page":"API","title":"ImGuiTestEngine.ClearState","text":"ClearState(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.BeginVideoCapture","page":"API","title":"ImGuiTestEngine.BeginVideoCapture","text":"BeginVideoCapture(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext},\n    args::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiCaptureArgs}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.EndVideoCapture","page":"API","title":"ImGuiTestEngine.EndVideoCapture","text":"EndVideoCapture(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsCapturingVideo","page":"API","title":"ImGuiTestEngine.IsCapturingVideo","text":"IsCapturingVideo(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.IsCapturing","page":"API","title":"ImGuiTestEngine.IsCapturing","text":"IsCapturing(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureContext}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiCaptureToolUI","page":"API","title":"ImGuiCaptureToolUI","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.ImGuiCaptureToolUI","page":"API","title":"ImGuiTestEngine.ImGuiCaptureToolUI","text":"ImGuiCaptureToolUI(\n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiCaptureToolUI}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.ShowCaptureToolWindow","page":"API","title":"ImGuiTestEngine.ShowCaptureToolWindow","text":"ShowCaptureToolWindow(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureToolUI},\n    context::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiCaptureContext}}\n)\nShowCaptureToolWindow(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureToolUI},\n    context::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiCaptureContext}},\n    p_open\n)\n\n\nRender a capture tool window with various options and utilities.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiCsvParser","page":"API","title":"ImGuiCsvParser","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.ImGuiCsvParser","page":"API","title":"ImGuiTestEngine.ImGuiCsvParser","text":"ImGuiCsvParser() -> Ptr{ImGuiTestEngine.lib.ImGuiCsvParser}\nImGuiCsvParser(\n    columns\n) -> Ptr{ImGuiTestEngine.lib.ImGuiCsvParser}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.Load","page":"API","title":"ImGuiTestEngine.Load","text":"Load(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCsvParser},\n    file_name\n) -> Bool\n\n\nOpen and parse a CSV file.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetCell","page":"API","title":"ImGuiTestEngine.GetCell","text":"GetCell(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCsvParser},\n    row,\n    col\n) -> Ptr{Int8}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestLog","page":"API","title":"ImGuiTestLog","text":"","category":"section"},{"location":"api/#ImGuiTestEngine.ImGuiTestLog","page":"API","title":"ImGuiTestEngine.ImGuiTestLog","text":"ImGuiTestLog() -> Ptr{ImGuiTestEngine.lib.ImGuiTestLog}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.ExtractLinesForVerboseLevels","page":"API","title":"ImGuiTestEngine.ExtractLinesForVerboseLevels","text":"ExtractLinesForVerboseLevels(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestLog},\n    level_min::ImGuiTestEngine.lib.ImGuiTestVerboseLevel,\n    level_max::ImGuiTestEngine.lib.ImGuiTestVerboseLevel,\n    out_buffer::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTextBuffer}}\n) -> Int32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.UpdateLineOffsets","page":"API","title":"ImGuiTestEngine.UpdateLineOffsets","text":"UpdateLineOffsets(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiTestLog},\n    engine_io::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiTestEngineIO}},\n    level::ImGuiTestEngine.lib.ImGuiTestVerboseLevel,\n    start\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#ImGuiTestEngine.Destroy","page":"API","title":"ImGuiTestEngine.Destroy","text":"Destructor for ImGuiCaptureImageBuf\n\n\n\n\n\nDestructor for ImGuiCaptureContext\n\n\n\n\n\nDestructor for ImGuiCaptureToolUI\n\n\n\n\n\nDestructor for ImGuiTestItemInfo\n\n\n\n\n\nDestructor for ImGuiTestLog\n\n\n\n\n\nDestructor for ImGuiTest\n\n\n\n\n\nDestructor for ImGuiTestRef\n\n\n\n\n\nDestructor for ImGuiTestRefDesc\n\n\n\n\n\nDestructor for ImGuiTestActionFilter\n\n\n\n\n\nDestructor for ImGuiTestGenericItemStatus\n\n\n\n\n\nDestructor for ImGuiTestGenericVars\n\n\n\n\n\nDestructor for ImGuiCsvParser\n\n\n\n\n\nDestructor for ImGuiPerfToolEntry\n\n\n\n\n\nDestructor for ImGuiPerfToolBatch\n\n\n\n\n\nDestructor for ImGuiPerfTool\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImHashDecoratedPath","page":"API","title":"ImGuiTestEngine.ImHashDecoratedPath","text":"ImHashDecoratedPath(str) -> UInt32\nImHashDecoratedPath(str, str_end) -> UInt32\nImHashDecoratedPath(str, str_end, seed) -> UInt32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImFindNextDecoratedPartInPath","page":"API","title":"ImGuiTestEngine.ImFindNextDecoratedPartInPath","text":"ImFindNextDecoratedPartInPath(str) -> Ptr{Int8}\nImFindNextDecoratedPartInPath(str, str_end) -> Ptr{Int8}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImFileExist","page":"API","title":"ImGuiTestEngine.ImFileExist","text":"ImFileExist(filename) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImFileDelete","page":"API","title":"ImGuiTestEngine.ImFileDelete","text":"ImFileDelete(filename) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImFileCreateDirectoryChain","page":"API","title":"ImGuiTestEngine.ImFileCreateDirectoryChain","text":"ImFileCreateDirectoryChain(path) -> Bool\nImFileCreateDirectoryChain(path, path_end) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImFileFindInParents","page":"API","title":"ImGuiTestEngine.ImFileFindInParents","text":"ImFileFindInParents(\n    sub_path,\n    max_parent_count,\n    output\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImFileLoadSourceBlurb","page":"API","title":"ImGuiTestEngine.ImFileLoadSourceBlurb","text":"ImFileLoadSourceBlurb(\n    filename,\n    line_no_start,\n    line_no_end,\n    out_buf::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTextBuffer}}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImGuiCaptureImageBuf","page":"API","title":"ImGuiTestEngine.ImGuiCaptureImageBuf","text":"ImGuiCaptureImageBuf(\n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiCaptureImageBuf}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.ImPathFindFilename","page":"API","title":"ImGuiTestEngine.ImPathFindFilename","text":"ImPathFindFilename(path) -> Ptr{Int8}\nImPathFindFilename(path, path_end) -> Ptr{Int8}\n\n\nReturn value always between path and path_end.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImPathFindExtension","page":"API","title":"ImGuiTestEngine.ImPathFindExtension","text":"ImPathFindExtension(path) -> Ptr{Int8}\nImPathFindExtension(path, path_end) -> Ptr{Int8}\n\n\nReturn value always between path and path_end.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImPathFixSeparatorsForCurrentOS","page":"API","title":"ImGuiTestEngine.ImPathFixSeparatorsForCurrentOS","text":"ImPathFixSeparatorsForCurrentOS(buf)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CreateEmpty","page":"API","title":"ImGuiTestEngine.CreateEmpty","text":"CreateEmpty(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureImageBuf},\n    w,\n    h\n)\n\n\nReallocate buffer for pixel data and zero it.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.SaveFile","page":"API","title":"ImGuiTestEngine.SaveFile","text":"SaveFile(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureImageBuf},\n    filename\n) -> Bool\n\n\nSave pixel data to specified image file.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.RemoveAlpha","page":"API","title":"ImGuiTestEngine.RemoveAlpha","text":"RemoveAlpha(\n    self::Ptr{ImGuiTestEngine.lib.ImGuiCaptureImageBuf}\n)\n\n\nClear alpha channel from all pixels.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImStrReplace","page":"API","title":"ImGuiTestEngine.ImStrReplace","text":"ImStrReplace(s, find, repl)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImStrchrRangeWithEscaping","page":"API","title":"ImGuiTestEngine.ImStrchrRangeWithEscaping","text":"ImStrchrRangeWithEscaping(str, str_end, find_c) -> Ptr{Int8}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImStrXmlEscape","page":"API","title":"ImGuiTestEngine.ImStrXmlEscape","text":"ImStrXmlEscape(s)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImStrBase64Encode","page":"API","title":"ImGuiTestEngine.ImStrBase64Encode","text":"ImStrBase64Encode(src, dst, length) -> Int32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImParseExtractArgcArgvFromCommandLine","page":"API","title":"ImGuiTestEngine.ImParseExtractArgcArgvFromCommandLine","text":"ImParseExtractArgcArgvFromCommandLine(\n    out_argc,\n    out_argv,\n    cmd_line\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImParseFindIniSection","page":"API","title":"ImGuiTestEngine.ImParseFindIniSection","text":"ImParseFindIniSection(\n    ini_config,\n    header,\n    result::Union{Ptr{Nothing}, Ref{CImGui.lib.ImVector_char}}\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImTimeGetInMicroseconds","page":"API","title":"ImGuiTestEngine.ImTimeGetInMicroseconds","text":"ImTimeGetInMicroseconds() -> UInt64\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImTimestampToISO8601","page":"API","title":"ImGuiTestEngine.ImTimestampToISO8601","text":"ImTimestampToISO8601(timestamp, out_date)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImThreadSleepInMilliseconds","page":"API","title":"ImGuiTestEngine.ImThreadSleepInMilliseconds","text":"ImThreadSleepInMilliseconds(ms)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImThreadSetCurrentThreadDescription","page":"API","title":"ImGuiTestEngine.ImThreadSetCurrentThreadDescription","text":"ImThreadSetCurrentThreadDescription(description)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImBuildGetCompilationInfo","page":"API","title":"ImGuiTestEngine.ImBuildGetCompilationInfo","text":"ImBuildGetCompilationInfo(\n\n) -> Ptr{ImGuiTestEngine.lib.ImBuildInfo}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImBuildFindGitBranchName","page":"API","title":"ImGuiTestEngine.ImBuildFindGitBranchName","text":"ImBuildFindGitBranchName(git_repo_path, branch_name) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImOsCreateProcess","page":"API","title":"ImGuiTestEngine.ImOsCreateProcess","text":"ImOsCreateProcess(cmd_line) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImOsPOpen","page":"API","title":"ImGuiTestEngine.ImOsPOpen","text":"ImOsPOpen(cmd_line, mode) -> Ptr{Base.Libc.FILE}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImOsPClose","page":"API","title":"ImGuiTestEngine.ImOsPClose","text":"ImOsPClose(fp)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImOsOpenInShell","page":"API","title":"ImGuiTestEngine.ImOsOpenInShell","text":"ImOsOpenInShell(path)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImOsIsDebuggerPresent","page":"API","title":"ImGuiTestEngine.ImOsIsDebuggerPresent","text":"ImOsIsDebuggerPresent() -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImOsOutputDebugString","page":"API","title":"ImGuiTestEngine.ImOsOutputDebugString","text":"ImOsOutputDebugString(message)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImOsConsoleSetTextColor","page":"API","title":"ImGuiTestEngine.ImOsConsoleSetTextColor","text":"ImOsConsoleSetTextColor(\n    stream::ImGuiTestEngine.lib.ImOsConsoleStream,\n    color::ImGuiTestEngine.lib.ImOsConsoleTextColor\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TableGetHeaderID","page":"API","title":"ImGuiTestEngine.TableGetHeaderID","text":"TableGetHeaderID(\n    table::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTable}},\n    column::Union{Ptr{Int8}, Ptr{Nothing}, String}\n) -> UInt32\nTableGetHeaderID(\n    table::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTable}},\n    column::Union{Ptr{Int8}, Ptr{Nothing}, String},\n    instance_no::Integer\n) -> UInt32\n\n\nUpstream link.\n\n\n\n\n\nTableGetHeaderID(\n    table::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTable}},\n    column_n::Integer\n) -> UInt32\nTableGetHeaderID(\n    table::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiTable}},\n    column_n::Integer,\n    instance_no::Integer\n) -> UInt32\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.TableDiscardInstanceAndSettings","page":"API","title":"ImGuiTestEngine.TableDiscardInstanceAndSettings","text":"TableDiscardInstanceAndSettings(table_id)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.DrawDataVerifyMatchingBufferCount","page":"API","title":"ImGuiTestEngine.DrawDataVerifyMatchingBufferCount","text":"DrawDataVerifyMatchingBufferCount(\n    draw_data::Union{Ptr{Nothing}, Ref{CImGui.lib.ImDrawData}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.PerfToolAppendToCSV","page":"API","title":"ImGuiTestEngine.PerfToolAppendToCSV","text":"PerfToolAppendToCSV(\n    perf_log::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiPerfTool}},\n    entry::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiPerfToolEntry}}\n)\nPerfToolAppendToCSV(\n    perf_log::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiPerfTool}},\n    entry::Union{Ptr{Nothing}, Ref{ImGuiTestEngine.lib.ImGuiPerfToolEntry}},\n    filename\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImGuiTestActionFilter","page":"API","title":"ImGuiTestEngine.ImGuiTestActionFilter","text":"ImGuiTestActionFilter(\n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestActionFilter}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.ImGuiTestEngineHook_ItemAdd","page":"API","title":"ImGuiTestEngine.ImGuiTestEngineHook_ItemAdd","text":"ImGuiTestEngineHook_ItemAdd(\n    ui_ctx::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiContext}},\n    id,\n    bb::Union{Ptr{Nothing}, Ref{CImGui.lib.ImRect}},\n    item_data::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiLastItemData}}\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImGuiTestEngineHook_ItemInfo","page":"API","title":"ImGuiTestEngine.ImGuiTestEngineHook_ItemInfo","text":"ImGuiTestEngineHook_ItemInfo(\n    ui_ctx::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiContext}},\n    id,\n    label,\n    flags\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImGuiTestEngineHook_Log","page":"API","title":"ImGuiTestEngine.ImGuiTestEngineHook_Log","text":"ImGuiTestEngineHook_Log(\n    ui_ctx::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiContext}},\n    fmt\n)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.FindItemDebugLabel","page":"API","title":"ImGuiTestEngine.FindItemDebugLabel","text":"FindItemDebugLabel(\n    ui_ctx::Union{Ptr{Nothing}, Ref{CImGui.lib.ImGuiContext}},\n    id\n) -> Ptr{Int8}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Check","page":"API","title":"ImGuiTestEngine.Check","text":"Check(file, func, line, flags, result, expr) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CheckStrOp","page":"API","title":"ImGuiTestEngine.CheckStrOp","text":"CheckStrOp(\n    file,\n    func,\n    line,\n    flags,\n    op,\n    lhs_var,\n    lhs_value,\n    rhs_var,\n    rhs_value,\n    out_result\n) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.Error","page":"API","title":"ImGuiTestEngine.Error","text":"Error(file, func, line, flags, fmt) -> Bool\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.AssertLog","page":"API","title":"ImGuiTestEngine.AssertLog","text":"AssertLog(expr, file, _function, line)\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.GetTempStringBuilder","page":"API","title":"ImGuiTestEngine.GetTempStringBuilder","text":"GetTempStringBuilder() -> Ptr{CImGui.lib.ImGuiTextBuffer}\n\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImGuiTestGenericVars","page":"API","title":"ImGuiTestEngine.ImGuiTestGenericVars","text":"ImGuiTestGenericVars(\n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestGenericVars}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"api/#ImGuiTestEngine.InstallDefaultCrashHandler","page":"API","title":"ImGuiTestEngine.InstallDefaultCrashHandler","text":"InstallDefaultCrashHandler()\n\n\nInstall default crash handler (if you don't have one).\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.CrashHandler","page":"API","title":"ImGuiTestEngine.CrashHandler","text":"CrashHandler()\n\n\nDefault crash handler, should be called from a custom crash handler if such exists.\n\nUpstream link.\n\n\n\n\n\n","category":"function"},{"location":"api/#ImGuiTestEngine.ImGuiTestItemInfo","page":"API","title":"ImGuiTestEngine.ImGuiTestItemInfo","text":"ImGuiTestItemInfo(\n\n) -> Ptr{ImGuiTestEngine.lib.ImGuiTestItemInfo}\n\n\nUpstream link.\n\n\n\n\n\n","category":"type"},{"location":"changelog/#Changelog","page":"Changelog","title":"Changelog","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"This documents notable changes in ImGuiTestEngine.jl. The format is based on Keep a Changelog.","category":"page"},{"location":"changelog/#[v1.0.0](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v1.0.0)","page":"Changelog","title":"v1.0.0","text":"","category":"section"},{"location":"changelog/#Changed","page":"Changelog","title":"Changed","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Breaking: the package changed being mostly handwritten wrappers to mostly auto-generated wrappers, and so now the API much more closely mimics the upstream API, but there will also be breakages.\nBreaking: the GuiFunc and TestFunc functions no longer take a ctx argument. You will need to replace code like t.GuiFunc = ctx -> ... with t.GuiFunc = () -> ... and @register_test(engine, \"foo\", \"bar\") do ctx ... end with @register_test(engine, \"foo\", \"bar\") do ... end.\nBreaking: we also updated to the test engine for Dear ImGui 1.92, which has some of its own breaking changes.","category":"page"},{"location":"changelog/#[v0.1.7](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.7)-2025-02-05","page":"Changelog","title":"v0.1.7 - 2025-02-05","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Patch release to add compat for CImGui v5/Dear ImGui 1.91.8 (#13).","category":"page"},{"location":"changelog/#[v0.1.6](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.6)-2025-02-01","page":"Changelog","title":"v0.1.6 - 2025-02-01","text":"","category":"section"},{"location":"changelog/#Added","page":"Changelog","title":"Added","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Bindings for MouseMoveToPos() (#12).","category":"page"},{"location":"changelog/#[v0.1.5](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.5)-2024-12-19","page":"Changelog","title":"v0.1.5 - 2024-12-19","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Patch release to actually add compat for CImGui v4 (#9).","category":"page"},{"location":"changelog/#[v0.1.4](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.4)-2024-11-19","page":"Changelog","title":"v0.1.4 - 2024-11-19","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Patch release to fix compat for CImGui v4/Dear ImGui 1.91.5 (#8).","category":"page"},{"location":"changelog/#[v0.1.3](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.3)-2024-10-08","page":"Changelog","title":"v0.1.3 - 2024-10-08","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Patch release to add compat for CImGui v3.1/Dear ImGui 1.91.2 (#7).","category":"page"},{"location":"changelog/#[v0.1.2](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.2)-2024-09-09","page":"Changelog","title":"v0.1.2 - 2024-09-09","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Patch release to fix compat for CImGui v3/Dear ImGui 1.91.1 (#6).","category":"page"},{"location":"changelog/#[v0.1.1](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.1)-2024-09-03","page":"Changelog","title":"v0.1.1 - 2024-09-03","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"This release is compatible with CImGui.jl v2 and v3.","category":"page"},{"location":"changelog/#Added-2","page":"Changelog","title":"Added","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"Bindings for ComboClick() and ComboClickAll() (#4).\nBindings for MouseClick(), MouseMove(), ItemOpen(), ItemClose(), and a helper OpenAndClose() (#5).","category":"page"},{"location":"changelog/#Changed-2","page":"Changelog","title":"Changed","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"ItemClick() now supports passing a button argument to select which button to click (#5).","category":"page"},{"location":"changelog/#[v0.1.0](https://github.com/JuliaImGui/ImGuiTestEngine.jl/releases/tag/v0.1.0)-2024-06-27","page":"Changelog","title":"v0.1.0 - 2024-06-27","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"The initial release!","category":"page"},{"location":"#ImGuiTestEngine.jl","page":"ImGuiTestEngine.jl","title":"ImGuiTestEngine.jl","text":"","category":"section"},{"location":"","page":"ImGuiTestEngine.jl","title":"ImGuiTestEngine.jl","text":"This package provides Julia bindings for the Dear ImGui test engine, a testing and automation library for Dear ImGui. It's designed to be used with programs written with CImGui.jl. As with CImGui.jl the majority of the code is generated automatically from the test engine C bindings, but there are some differences to the C++ library to be aware of:","category":"page"},{"location":"","page":"ImGuiTestEngine.jl","title":"ImGuiTestEngine.jl","text":"Don't create ImGuiTestRef objects directly, instead pass either strings or integers and they will be automatically converted.\nAll functions have the ImGuiTestEngine prefix stripped from them, including top-level functions like ImGuiTestEngine_ShowTestEngineWindows (which is just ShowTestEngineWindows()).\nEnums beginning with ImGui* or ImGuiTest* have aliases defined for them with those prefixes stripped. e.g. ImGuiCaptureFlags_None has the alias CaptureFlags_None and ImGuiTestRunSpeed_Fast has the alias RunSpeed_Fast.\nAll of the ImGuiTestContext methods like SetRef() and MouseClick() etc are able to automatically detect the current test context so you never need to pass the self argument to them. i.e. instead of e.g. SetRef(test_ctx, \"Foo\") just SetRef(\"Foo\") will work.","category":"page"},{"location":"","page":"ImGuiTestEngine.jl","title":"ImGuiTestEngine.jl","text":"Known issues:","category":"page"},{"location":"","page":"ImGuiTestEngine.jl","title":"ImGuiTestEngine.jl","text":"Some parts of the integration with @imcheck and the stdlib Test are incomplete and errors may not be reported properly.","category":"page"},{"location":"","page":"ImGuiTestEngine.jl","title":"ImGuiTestEngine.jl","text":"Here's a quick example:","category":"page"},{"location":"","page":"ImGuiTestEngine.jl","title":"ImGuiTestEngine.jl","text":"# Imports that we'll be using\nusing ImGuiTestEngine\nimport ImGuiTestEngine as te\nimport CImGui as ig\n\n# Set up the backend for CImGui\nimport GLFW\nimport ModernGL\nig.set_backend(:GlfwOpenGL3)\n\n# Create the ImGui context and test engine instance\nctx = ig.CreateContext()\nengine = te.CreateContext(; exit_on_completion=false)\n\n# Make them run at a humanly-visible speed\nengine_io = te.GetIO(engine)\nengine_io.ConfigRunSpeed = te.RunSpeed_Normal\n\n# Create a test that'll click a button\nclicked = false\n@register_test(engine, \"foo\", \"bar\") do\n    SetRef(\"Foo\")\n    ItemClick(\"Click me\")\n    @imcheck clicked\nend\n\n# Start the renderloop, this is where your program should be running. Note that\n# we pass the engine to the renderloop, it will take care of starting and\n# queueing the engine.\nig.render(ctx; engine) do\n    ig.Begin(\"Foo\")\n    ig.Text(\"Hello world!\")\n    if ig.Button(\"Click me\")\n        @info \"Hello world!\"\n        global clicked = true\n    end\n    ig.End()\nend\n\n# Note that we don't need to explictly destroy `ctx` because `ig.render()` will\n# do it for us.\nte.DestroyContext(engine)","category":"page"}]
}
